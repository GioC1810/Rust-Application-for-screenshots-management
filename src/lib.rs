pub mod hotkey_screen;
pub mod  ui_functions;
pub mod hashmap_hotkey;
pub mod graphical_elements;
pub mod data;
/*
use crate::hotkey_screen::*;
use graphical_elements::rectangles_equal;
use HashMapHotKey::{HKdict,HKdictModifiers};
use graphical_elements::{ExpandableRect,ColorGrid};
use ui_functions::*;
use std::cell::RefCell;
use std::{rc::Rc,fs,env,thread};
use std::f64::consts::PI;
use std::sync::Arc;
use druid::widget::{Axis, Button, Flex, Image, KnobStyle, Label,  Painter,SizedBox, Slider, TextBox, ViewSwitcher, ZStack};
use druid::{Point, BoxConstraints, Color,Data, Env, Event, EventCtx, LayoutCtx, LifeCycle, LifeCycleCtx, MouseButton, PaintCtx, Rect, RenderContext, Size, UpdateCtx, Widget, WindowDesc, ImageBuf, KbKey, WidgetExt, Lens, Cursor, KeyOrValue, Selector, WindowId};
use druid::WindowState::Maximized;
use druid::piet::ImageFormat as FormatImage;
use druid::kurbo::BezPath;
use image::{DynamicImage, ImageBuffer, Rgba};
use imageproc::drawing::{draw_line_segment, draw_hollow_rect, draw_hollow_circle, draw_text};
use imageproc::rect::Rect as OtherRect;
use screenshots::{Compression, Screen};
use arboard::{Clipboard,ImageData};
use global_hotkey::{GlobalHotKeyEvent, GlobalHotKeyManager, hotkey::{HotKey as HotKeyGlobal, Modifiers, Code}};
use native_dialog::{FileDialog};
use rusttype::{Font,Scale};
use std::time::Duration;
use druid::commands::CLOSE_WINDOW;
use druid::Target::Window;
*/